import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { JudicialProfile } from "@/entities/JudicialProfile";
import { Gavel, Search, AlertTriangle, ExternalLink, TrendingUp } from "lucide-react";

export default function JudicialAccountability() {
    const [profiles, setProfiles] = useState([]);
    const [searchTerm, setSearchTerm] = useState('');
    const [selectedState, setSelectedState] = useState('');
    const [isLoading, setIsLoading] = useState(false);

    useEffect(() => {
        loadProfiles();
    }, []);

    const loadProfiles = async () => {
        setIsLoading(true);
        try {
            const data = await JudicialProfile.list("-last_updated", 50);
            setProfiles(data);
        } catch (error) {
            console.error("Error loading profiles:", error);
        } finally {
            setIsLoading(false);
        }
    };

    const filteredProfiles = profiles.filter(profile => {
        const matchesSearch = !searchTerm || 
            profile.full_name.toLowerCase().includes(searchTerm.toLowerCase()) ||
            profile.jurisdiction.toLowerCase().includes(searchTerm.toLowerCase());
        const matchesState = !selectedState || profile.state === selectedState;
        return matchesSearch && matchesState;
    });

    const judges = filteredProfiles.filter(p => p.position === 'judge');
    const prosecutors = filteredProfiles.filter(p => ['prosecutor', 'district_attorney', 'attorney_general'].includes(p.position));

    const ComplaintGuide = () => (
        <Card>
            <CardHeader>
                <CardTitle>How to File Misconduct Complaints</CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
                <div>
                    <h4 className="font-semibold mb-2">For Judges:</h4>
                    <ul className="text-sm space-y-1 list-disc list-inside text-slate-600">
                        <li>Contact your state's Judicial Conduct Commission</li>
                        <li>File complaints for bias, inappropriate behavior, or ethical violations</li>
                        <li>Most states have online complaint forms</li>
                        <li>Include specific dates, case numbers, and witness information</li>
                    </ul>
                </div>
                <div>
                    <h4 className="font-semibold mb-2">For Prosecutors:</h4>
                    <ul className="text-sm space-y-1 list-disc list-inside text-slate-600">
                        <li>File with your state bar association's disciplinary board</li>
                        <li>Contact the prosecutor's office directly for internal complaints</li>
                        <li>Consider filing federal civil rights complaints for constitutional violations</li>
                        <li>Document evidence suppression, Brady violations, or prosecutorial misconduct</li>
                    </ul>
                </div>
                <div className="bg-amber-50 border border-amber-200 rounded-lg p-4">
                    <h4 className="font-semibold text-amber-900 mb-2">Important Note:</h4>
                    <p className="text-amber-800 text-sm">
                        Filing complaints may not directly affect your current case, but helps create an official record of misconduct that can benefit future cases and other defendants.
                    </p>
                </div>
            </CardContent>
        </Card>
    );

    const ProfileCard = ({ profile }) => (
        <Card className="hover:shadow-md transition-shadow">
            <CardContent className="p-4">
                <div className="flex justify-between items-start mb-3">
                    <div>
                        <h3 className="font-semibold text-lg">{profile.full_name}</h3>
                        <p className="text-slate-600 text-sm">{profile.jurisdiction}</p>
                        <p className="text-slate-500 text-xs">{profile.state}</p>
                    </div>
                    <Badge variant="outline" className="capitalize">
                        {profile.position.replace('_', ' ')}
                    </Badge>
                </div>

                <div className="space-y-2">
                    {profile.reversal_rate && (
                        <div className="flex items-center justify-between text-sm">
                            <span className="text-slate-600">Reversal Rate:</span>
                            <Badge 
                                className={
                                    profile.reversal_rate > 15 ? 'bg-red-100 text-red-800 border-red-200' :
                                    profile.reversal_rate > 8 ? 'bg-yellow-100 text-yellow-800 border-yellow-200' :
                                    'bg-green-100 text-green-800 border-green-200'
                                }
                            >
                                {profile.reversal_rate}%
                            </Badge>
                        </div>
                    )}

                    {profile.total_decisions && (
                        <div className="flex items-center justify-between text-sm">
                            <span className="text-slate-600">Decisions Tracked:</span>
                            <span>{profile.total_decisions}</span>
                        </div>
                    )}

                    {profile.misconduct_complaints && profile.misconduct_complaints.length > 0 && (
                        <div className="flex items-center justify-between text-sm">
                            <span className="text-slate-600">Misconduct Complaints:</span>
                            <Badge variant="outline" className="bg-red-50 text-red-700 border-red-200">
                                {profile.misconduct_complaints.length}
                            </Badge>
                        </div>
                    )}

                    {profile.start_date && (
                        <div className="flex items-center justify-between text-sm">
                            <span className="text-slate-600">In Office Since:</span>
                            <span>{new Date(profile.start_date).getFullYear()}</span>
                        </div>
                    )}
                </div>

                {profile.notable_cases && profile.notable_cases.length > 0 && (
                    <div className="mt-3">
                        <h4 className="text-sm font-medium text-slate-700 mb-1">Notable Cases:</h4>
                        <ul className="text-xs text-slate-600 list-disc list-inside">
                            {profile.notable_cases.slice(0, 2).map((case_name, index) => (
                                <li key={index}>{case_name}</li>
                            ))}
                        </ul>
                    </div>
                )}
            </CardContent>
        </Card>
    );

    return (
        <div className="p-6 space-y-8">
            <div className="max-w-7xl mx-auto">
                {/* Header */}
                <div className="mb-8">
                    <div className="flex items-center gap-3 mb-4">
                        <div className="w-12 h-12 bg-gradient-to-br from-slate-700 to-slate-900 rounded-xl flex items-center justify-center">
                            <Gavel className="w-7 h-7 text-white" />
                        </div>
                        <div>
                            <h1 className="text-3xl font-bold text-slate-900">Judicial & Prosecutorial Accountability Center</h1>
                            <p className="text-slate-600 mt-1">Monitor the performance and conduct of judges and prosecutors</p>
                        </div>
                    </div>
                </div>

                {/* Search and Filters */}
                <Card className="mb-8">
                    <CardContent className="p-4">
                        <div className="flex gap-4">
                            <div className="flex-1">
                                <Input
                                    placeholder="Search by name or jurisdiction..."
                                    value={searchTerm}
                                    onChange={(e) => setSearchTerm(e.target.value)}
                                    className="w-full"
                                />
                            </div>
                            <div>
                                <Input
                                    placeholder="Filter by state..."
                                    value={selectedState}
                                    onChange={(e) => setSelectedState(e.target.value)}
                                    className="w-48"
                                />
                            </div>
                            <Button onClick={loadProfiles} disabled={isLoading}>
                                <Search className="w-4 h-4 mr-2" />
                                {isLoading ? "Searching..." : "Search"}
                            </Button>
                        </div>
                    </CardContent>
                </Card>

                <Tabs defaultValue="judges" className="space-y-6">
                    <TabsList className="grid w-full grid-cols-3">
                        <TabsTrigger value="judges">Judges ({judges.length})</TabsTrigger>
                        <TabsTrigger value="prosecutors">Prosecutors ({prosecutors.length})</TabsTrigger>
                        <TabsTrigger value="complaint-guide">File Complaints</TabsTrigger>
                    </TabsList>

                    <TabsContent value="judges" className="space-y-6">
                        {judges.length === 0 ? (
                            <Card>
                                <CardContent className="p-12 text-center">
                                    <Gavel className="w-12 h-12 text-slate-400 mx-auto mb-4" />
                                    <h3 className="text-lg font-semibold text-slate-900 mb-2">No Judge Profiles Found</h3>
                                    <p className="text-slate-600">
                                        This database is community-sourced. Help build accountability by researching and submitting judicial profiles.
                                    </p>
                                </CardContent>
                            </Card>
                        ) : (
                            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                                {judges.map((profile) => (
                                    <ProfileCard key={profile.id} profile={profile} />
                                ))}
                            </div>
                        )}
                    </TabsContent>

                    <TabsContent value="prosecutors" className="space-y-6">
                        {prosecutors.length === 0 ? (
                            <Card>
                                <CardContent className="p-12 text-center">
                                    <Gavel className="w-12 h-12 text-slate-400 mx-auto mb-4" />
                                    <h3 className="text-lg font-semibold text-slate-900 mb-2">No Prosecutor Profiles Found</h3>
                                    <p className="text-slate-600">
                                        This database is community-sourced. Help build accountability by researching and submitting prosecutor profiles.
                                    </p>
                                </CardContent>
                            </Card>
                        ) : (
                            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                                {prosecutors.map((profile) => (
                                    <ProfileCard key={profile.id} profile={profile} />
                                ))}
                            </div>
                        )}
                    </TabsContent>

                    <TabsContent value="complaint-guide" className="space-y-6">
                        <ComplaintGuide />
                    </TabsContent>
                </Tabs>
            </div>
        </div>
    );
}